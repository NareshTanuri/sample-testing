{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\Pages\\\\Example2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst arrayData = [{\n  id: 1,\n  name: \"Naresh\",\n  isChecked: false\n}, {\n  id: 2,\n  name: \"Raresh\",\n  isChecked: false\n}, {\n  id: 3,\n  name: \"Suresh\",\n  isChecked: false\n}];\n\nconst Example2 = () => {\n  _s();\n\n  const [state, setState] = useState({\n    arrayDetails: arrayData,\n    isCheckedData: false\n  });\n  debugger;\n\n  const handleInputChange = id => {\n    setState(prevState => ({\n      arrayDetails: prevState.arrayDetails.map(item => item.id === id ? { ...item,\n        isChecked: !item.isChecked\n      } : item)\n    }));\n  };\n\n  const checkType = [{\n    type: \"checkbox\",\n    label: \"Checked\",\n    name: \"isChecked\"\n  }];\n\n  const handleDelete = indexValue => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.arrayDetails.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"h4\",\n        children: [checkType.map((checkbox, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: checkbox.type,\n          name: checkbox.name,\n          checked: item.isChecked,\n          onChange: () => handleInputChange(item.id)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)), \" \", index + 1, \" - \", item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Example2, \"8KBn+O06evxnAWLau6hX9AD+GoI=\");\n\n_c = Example2;\nexport default Example2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example2\");","map":{"version":3,"names":["React","useState","arrayData","id","name","isChecked","Example2","state","setState","arrayDetails","isCheckedData","handleInputChange","prevState","map","item","checkType","type","label","handleDelete","indexValue","index","checkbox","idx"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/Pages/Example2.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst arrayData = [\r\n    { id: 1, name: \"Naresh\", isChecked: false },\r\n    { id: 2, name: \"Raresh\", isChecked: false },\r\n    { id: 3, name: \"Suresh\", isChecked: false },\r\n];\r\n\r\nconst Example2 = () => {\r\n    const [state, setState] = useState({\r\n        arrayDetails: arrayData,\r\n        isCheckedData:false,\r\n    });\r\n    debugger;\r\n    const handleInputChange = (id) => {\r\n        setState((prevState) => ({\r\n            arrayDetails: prevState.arrayDetails.map((item) =>\r\n                item.id === id ? { ...item, isChecked: !item.isChecked } : item\r\n            ),\r\n        }));\r\n    };\r\n\r\n    const checkType = [{ type: \"checkbox\", label: \"Checked\", name: \"isChecked\" }];\r\n    const handleDelete = (indexValue) => {\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <ul>\r\n                {state.arrayDetails.map((item, index) => (\r\n                    <li key={item.id} className=\"h4\">\r\n                        {checkType.map((checkbox, idx) => (\r\n                            <input\r\n                                key={idx}\r\n                                type={checkbox.type}\r\n                                name={checkbox.name}\r\n                                checked={item.isChecked}\r\n                                onChange={() => handleInputChange(item.id)}\r\n                            />\r\n                        ))}{\" \"}\r\n                        {index + 1} - {item.name}\r\n                        <button onClick={() =>handleDelete(index)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Example2;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,CACd;EAAEC,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,QAAf;EAAyBC,SAAS,EAAE;AAApC,CADc,EAEd;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,QAAf;EAAyBC,SAAS,EAAE;AAApC,CAFc,EAGd;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,QAAf;EAAyBC,SAAS,EAAE;AAApC,CAHc,CAAlB;;AAMA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;IAC/BQ,YAAY,EAAEP,SADiB;IAE/BQ,aAAa,EAAC;EAFiB,CAAD,CAAlC;EAIA;;EACA,MAAMC,iBAAiB,GAAIR,EAAD,IAAQ;IAC9BK,QAAQ,CAAEI,SAAD,KAAgB;MACrBH,YAAY,EAAEG,SAAS,CAACH,YAAV,CAAuBI,GAAvB,CAA4BC,IAAD,IACrCA,IAAI,CAACX,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGW,IAAL;QAAWT,SAAS,EAAE,CAACS,IAAI,CAACT;MAA5B,CAAjB,GAA2DS,IADjD;IADO,CAAhB,CAAD,CAAR;EAKH,CAND;;EAQA,MAAMC,SAAS,GAAG,CAAC;IAAEC,IAAI,EAAE,UAAR;IAAoBC,KAAK,EAAE,SAA3B;IAAsCb,IAAI,EAAE;EAA5C,CAAD,CAAlB;;EACA,MAAMc,YAAY,GAAIC,UAAD,IAAgB,CAEpC,CAFD;;EAGA,oBACI;IAAA,uBACI;MAAA,UACKZ,KAAK,CAACE,YAAN,CAAmBI,GAAnB,CAAuB,CAACC,IAAD,EAAOM,KAAP,kBACpB;QAAkB,SAAS,EAAC,IAA5B;QAAA,WACKL,SAAS,CAACF,GAAV,CAAc,CAACQ,QAAD,EAAWC,GAAX,kBACX;UAEI,IAAI,EAAED,QAAQ,CAACL,IAFnB;UAGI,IAAI,EAAEK,QAAQ,CAACjB,IAHnB;UAII,OAAO,EAAEU,IAAI,CAACT,SAJlB;UAKI,QAAQ,EAAE,MAAMM,iBAAiB,CAACG,IAAI,CAACX,EAAN;QALrC,GACSmB,GADT;UAAA;UAAA;UAAA;QAAA,QADH,CADL,EASQ,GATR,EAUKF,KAAK,GAAG,CAVb,SAUmBN,IAAI,CAACV,IAVxB,eAWI;UAAQ,OAAO,EAAE,MAAKc,YAAY,CAACE,KAAD,CAAlC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA,GAASN,IAAI,CAACX,EAAd;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAqBH,CAvCD;;GAAMG,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}