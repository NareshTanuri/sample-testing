{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\MultipleFilesUpload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UploadMultipleImage() {\n  _s();\n\n  const [state, setState] = useState({\n    arrayOfObjects: []\n  });\n\n  const handleChange = e => {\n    const files = Array.from(e.target.files);\n    const filesWithBase64 = [];\n    files.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        const fileObj = {\n          file,\n          base64Data: reader.result\n        };\n        filesWithBase64.push(fileObj);\n\n        if (filesWithBase64.length === files.length) {\n          setState(prevState => ({\n            arrayOfObjects: [...prevState.arrayOfObjects, ...filesWithBase64]\n          })); // Create formData object to send files\n\n          const formData = new FormData();\n          filesWithBase64.forEach((fileObj, index) => {\n            formData.append(`file${index}`, fileObj.file);\n          }); // Send files via Axios\n\n          axios.post(\"https://fapi.rizee.in/file_upload\", formData).then(response => {\n            console.log(\"response\", response); // Handle success if needed\n          }).catch(error => {\n            console.error(\"Error:\", error); // Handle error if needed\n          });\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.arrayOfObjects.map((obj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: obj.base64Data,\n          alt: obj.file.name,\n          width: 50,\n          height: 50,\n          style: {\n            objectFit: 'cover',\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: obj.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadMultipleImage, \"csjkrmV7ms9qbaL8akwvReqku0E=\");\n\n_c = UploadMultipleImage;\nexport default UploadMultipleImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadMultipleImage\");","map":{"version":3,"names":["React","useState","axios","UploadMultipleImage","state","setState","arrayOfObjects","handleChange","e","files","Array","from","target","filesWithBase64","forEach","file","reader","FileReader","onload","fileObj","base64Data","result","push","length","prevState","formData","FormData","index","append","post","then","response","console","log","catch","error","readAsDataURL","map","obj","marginBottom","name","objectFit","marginRight"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/MultipleFilesUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadMultipleImage() {\r\n    const [state, setState] = useState({\r\n        arrayOfObjects: [],\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const files = Array.from(e.target.files);\r\n        const filesWithBase64 = [];\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                const fileObj = {\r\n                    file,\r\n                    base64Data: reader.result,\r\n                };\r\n                filesWithBase64.push(fileObj);\r\n\r\n                if (filesWithBase64.length === files.length) {\r\n                    setState(prevState => ({\r\n                        arrayOfObjects: [...prevState.arrayOfObjects, ...filesWithBase64],\r\n                    }));\r\n\r\n                    // Create formData object to send files\r\n                    const formData = new FormData();\r\n                    filesWithBase64.forEach((fileObj, index) => {\r\n                        formData.append(`file${index}`, fileObj.file);\r\n                    });\r\n\r\n                    // Send files via Axios\r\n                    axios.post(\"https://fapi.rizee.in/file_upload\", formData)\r\n                        .then(response => {\r\n                            console.log(\"response\", response);\r\n                            // Handle success if needed\r\n                        })\r\n                        .catch(error => {\r\n                            console.error(\"Error:\", error);\r\n                            // Handle error if needed\r\n                        });\r\n                }\r\n            };\r\n            reader.readAsDataURL(file);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input type=\"file\" multiple onChange={(e) => handleChange(e)} />\r\n            <div>\r\n                {state.arrayOfObjects.map((obj, index) => (\r\n                    <div key={index} style={{ marginBottom: '10px' }}>\r\n                        <img\r\n                            src={obj.base64Data}\r\n                            alt={obj.file.name}\r\n                            width={50}\r\n                            height={50}\r\n                            style={{ objectFit: 'cover', marginRight: '10px' }}\r\n                        />\r\n                        <span>{obj.file.name}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UploadMultipleImage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,mBAAT,GAA+B;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;IAC/BK,cAAc,EAAE;EADe,CAAD,CAAlC;;EAIA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWH,CAAC,CAACI,MAAF,CAASH,KAApB,CAAd;IACA,MAAMI,eAAe,GAAG,EAAxB;IAEAJ,KAAK,CAACK,OAAN,CAAcC,IAAI,IAAI;MAClB,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;MACAD,MAAM,CAACE,MAAP,GAAgB,MAAM;QAClB,MAAMC,OAAO,GAAG;UACZJ,IADY;UAEZK,UAAU,EAAEJ,MAAM,CAACK;QAFP,CAAhB;QAIAR,eAAe,CAACS,IAAhB,CAAqBH,OAArB;;QAEA,IAAIN,eAAe,CAACU,MAAhB,KAA2Bd,KAAK,CAACc,MAArC,EAA6C;UACzClB,QAAQ,CAACmB,SAAS,KAAK;YACnBlB,cAAc,EAAE,CAAC,GAAGkB,SAAS,CAAClB,cAAd,EAA8B,GAAGO,eAAjC;UADG,CAAL,CAAV,CAAR,CADyC,CAKzC;;UACA,MAAMY,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;UACAb,eAAe,CAACC,OAAhB,CAAwB,CAACK,OAAD,EAAUQ,KAAV,KAAoB;YACxCF,QAAQ,CAACG,MAAT,CAAiB,OAAMD,KAAM,EAA7B,EAAgCR,OAAO,CAACJ,IAAxC;UACH,CAFD,EAPyC,CAWzC;;UACAb,KAAK,CAAC2B,IAAN,CAAW,mCAAX,EAAgDJ,QAAhD,EACKK,IADL,CACUC,QAAQ,IAAI;YACdC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB,EADc,CAEd;UACH,CAJL,EAKKG,KALL,CAKWC,KAAK,IAAI;YACZH,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB,EADY,CAEZ;UACH,CARL;QASH;MACJ,CA7BD;;MA8BAnB,MAAM,CAACoB,aAAP,CAAqBrB,IAArB;IACH,CAjCD;EAkCH,CAtCD;;EAwCA,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,MAA3B;MAA4B,QAAQ,EAAGP,CAAD,IAAOD,YAAY,CAACC,CAAD;IAAzD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UACKJ,KAAK,CAACE,cAAN,CAAqB+B,GAArB,CAAyB,CAACC,GAAD,EAAMX,KAAN,kBACtB;QAAiB,KAAK,EAAE;UAAEY,YAAY,EAAE;QAAhB,CAAxB;QAAA,wBACI;UACI,GAAG,EAAED,GAAG,CAAClB,UADb;UAEI,GAAG,EAAEkB,GAAG,CAACvB,IAAJ,CAASyB,IAFlB;UAGI,KAAK,EAAE,EAHX;UAII,MAAM,EAAE,EAJZ;UAKI,KAAK,EAAE;YAAEC,SAAS,EAAE,OAAb;YAAsBC,WAAW,EAAE;UAAnC;QALX;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UAAA,UAAOJ,GAAG,CAACvB,IAAJ,CAASyB;QAAhB;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA,GAAUb,KAAV;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAmBH;;GAhEQxB,mB;;KAAAA,mB;AAkET,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}