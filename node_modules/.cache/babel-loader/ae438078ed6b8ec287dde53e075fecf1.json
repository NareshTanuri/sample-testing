{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\MultipleFilesUpload.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Types = [{\n  type: \"audio\",\n  extension: [\"mp3\", \"flac\", \"wav\", \"ogg\", \"m3u\", \"acc\", \"wma\", \"midi\", \"aif\", \"m4a\", \"mpa\", \"pls\", \"aiff\", \"mid\", \"midi\", \"au\", \"snd\", \"mpga\", \"mp2\", \"bwf\", \"aax\", \"aa\", \"aac\", \"caf\", \"m4r\", \"ac3\", \"eac3\", \"ec3\", \"mpeg\"]\n}, {\n  type: \"video\",\n  extension: [\"mp3\", \"mp4\", \"mkv\", \"m4v\", \"mov\", \"mpg\", \"avi\", \"vfw\", \"mpg4\", \"mpe\", \"m75\", \"m15\", \"dif\", \"ts\", \"mov\", \"qt\", \"dif\", \"wmv\"]\n}, {\n  type: \"image\",\n  extension: [\"jpg\", \"jpeg\", \"apng\", \"avif\", \"gif\", \"jfif\", \"pjpeg\", \"pjp\", \"png\", \"svg\", \"webp\", \"bmp\", \"ico\", \"cur\", \"tif\", \"tiff\", \"psd\"]\n}, {\n  type: \"document\",\n  extension: [\"pdf\", \"png\", \"doc\", \"docx\", \"xls\", \"html\", \"htm\", \"txt\", \"rtf\", \"msg\", \"zip\", \"xlsx\", \"xlsm\", \"java\", \"c\", \"class\", \"cpp\", \"py\", \"php\", \"html\", \"htm\", \"cs\", \"css\", \"pp\", \"csv\", \"rar\", \"jsx\"]\n}];\n\nfunction UploadMultipleImage() {\n  _s();\n\n  const [arrayOfObjects, setArrayOfObjects] = useState([]);\n  console.log(\"arrayOfObjects\", arrayOfObjects);\n\n  const onFileChange = async event => {\n    event.preventDefault();\n    const files = Array.from(event.target.files);\n\n    try {\n      const filesData = await Promise.all(files.map(file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = () => resolve({\n          base64Data: reader.result,\n          file\n        });\n\n        reader.onerror = reject;\n        reader.readAsDataURL(file);\n      })));\n      setArrayOfObjects(filesData);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.categoryMediaFiles.map((item, index) => {\n        const imageUrl = item;\n        const fileExtension = item.split('.').pop().toLowerCase();\n        const fileType = Types.find(type => type.extension.includes(fileExtension));\n        return /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          children: [fileType ? fileType.type === \"image\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"Preview\",\n              style: imageStyles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 57\n          }, this) : fileType.type === \"video\" ? /*#__PURE__*/_jsxDEV(\"video\", {\n            src: imageUrl,\n            controls: true,\n            autoPlay: false,\n            alt: \"Preview\",\n            style: imageStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 57\n          }, this) : fileType.type === \"document\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: NoPreview,\n              alt: \"Preview\",\n              style: imageStyles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 57\n          }, this) : fileType.type === \"audio\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: NoPreview,\n              alt: \"Preview\",\n              style: imageStyles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 57\n          }, this) : null : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-success\",\n            children: \"Unsupported file type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h6\",\n              onClick: e => handleDeleteImg(e, index),\n              children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 149\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 85\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 49\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 45\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadMultipleImage, \"BmSk8HTii1SuxpYe0DNxR0vFmu4=\");\n\n_c = UploadMultipleImage;\nexport default UploadMultipleImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadMultipleImage\");","map":{"version":3,"names":["React","useState","Types","type","extension","UploadMultipleImage","arrayOfObjects","setArrayOfObjects","console","log","onFileChange","event","preventDefault","files","Array","from","target","filesData","Promise","all","map","file","resolve","reject","reader","FileReader","onload","base64Data","result","onerror","readAsDataURL","error","state","categoryMediaFiles","item","index","imageUrl","fileExtension","split","pop","toLowerCase","fileType","find","includes","imageStyles","NoPreview","cursor","e","handleDeleteImg"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/MultipleFilesUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst Types = [\r\n    { type: \"audio\", extension: [\"mp3\", \"flac\", \"wav\", \"ogg\", \"m3u\", \"acc\", \"wma\", \"midi\", \"aif\", \"m4a\", \"mpa\", \"pls\", \"aiff\", \"mid\", \"midi\", \"au\", \"snd\", \"mpga\", \"mp2\", \"bwf\", \"aax\", \"aa\", \"aac\", \"caf\", \"m4r\", \"ac3\", \"eac3\", \"ec3\",\"mpeg\"] },\r\n    { type: \"video\", extension: [\"mp3\", \"mp4\", \"mkv\", \"m4v\", \"mov\", \"mpg\", \"avi\", \"vfw\", \"mpg4\", \"mpe\", \"m75\", \"m15\", \"dif\", \"ts\", \"mov\", \"qt\", \"dif\", \"wmv\"] },\r\n    { type: \"image\", extension: [\"jpg\", \"jpeg\", \"apng\", \"avif\", \"gif\", \"jfif\", \"pjpeg\", \"pjp\", \"png\", \"svg\", \"webp\", \"bmp\", \"ico\", \"cur\", \"tif\", \"tiff\", \"psd\"] },\r\n    { type: \"document\", extension: [\"pdf\", \"png\", \"doc\", \"docx\", \"xls\", \"html\", \"htm\", \"txt\", \"rtf\", \"msg\", \"zip\", \"xlsx\", \"xlsm\", \"java\", \"c\", \"class\", \"cpp\", \"py\", \"php\", \"html\", \"htm\", \"cs\", \"css\", \"pp\", \"csv\", \"rar\", \"jsx\"] }\r\n];\r\n\r\nfunction UploadMultipleImage() {\r\n    const [arrayOfObjects, setArrayOfObjects] = useState([]);\r\n    console.log(\"arrayOfObjects\", arrayOfObjects);\r\n\r\n    const onFileChange = async (event) => {\r\n        event.preventDefault();\r\n        const files = Array.from(event.target.files);\r\n        try {\r\n            const filesData = await Promise.all(files.map(file => new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.onload = () => resolve({ base64Data: reader.result, file });\r\n                reader.onerror = reject;\r\n                reader.readAsDataURL(file);\r\n            })));\r\n            setArrayOfObjects(filesData);\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input type=\"file\" multiple onChange={onFileChange} />\r\n            <div>\r\n            {state.categoryMediaFiles.map((item, index) => {\r\n                                        const imageUrl = item;\r\n                                        const fileExtension = item.split('.').pop().toLowerCase()\r\n                                        const fileType = Types.find(type => type.extension.includes(fileExtension))\r\n                                        return (\r\n                                            <Col sm={6} key={index}>\r\n                                                {fileType ? (\r\n                                                    fileType.type === \"image\" ? (\r\n                                                        <div>\r\n                                                            <img\r\n                                                                src={imageUrl}\r\n                                                                alt=\"Preview\"\r\n                                                                style={imageStyles}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : fileType.type === \"video\" ? (\r\n                                                        <video\r\n                                                            src={imageUrl}\r\n                                                            controls={true}\r\n                                                            autoPlay={false}\r\n                                                            alt=\"Preview\"\r\n                                                            style={imageStyles}\r\n                                                        ></video>\r\n                                                    ) : fileType.type === \"document\" ? (\r\n                                                        <div>\r\n                                                            <img src={NoPreview}\r\n                                                                alt=\"Preview\"\r\n                                                                style={imageStyles}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : fileType.type === \"audio\" ? (\r\n                                                        <div>\r\n                                                            <img src={NoPreview}\r\n                                                                alt=\"Preview\"\r\n                                                                style={imageStyles}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                ) : (\r\n                                                    <div className=\"text-success\">Unsupported file type</div>\r\n                                                )}\r\n                                                <span style={{ cursor: \"pointer\" }}><div className=\"h6\" onClick={(e) => handleDeleteImg(e, index)} ><DeleteIcon className=\"text-danger\" /> Delete</div></span>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UploadMultipleImage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,KAAK,GAAG,CACV;EAAEC,IAAI,EAAE,OAAR;EAAiBC,SAAS,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,MAAnD,EAA2D,KAA3D,EAAkE,KAAlE,EAAyE,KAAzE,EAAgF,KAAhF,EAAuF,MAAvF,EAA+F,KAA/F,EAAsG,MAAtG,EAA8G,IAA9G,EAAoH,KAApH,EAA2H,MAA3H,EAAmI,KAAnI,EAA0I,KAA1I,EAAiJ,KAAjJ,EAAwJ,IAAxJ,EAA8J,KAA9J,EAAqK,KAArK,EAA4K,KAA5K,EAAmL,KAAnL,EAA0L,MAA1L,EAAkM,KAAlM,EAAwM,MAAxM;AAA5B,CADU,EAEV;EAAED,IAAI,EAAE,OAAR;EAAiBC,SAAS,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,MAAzD,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,KAA/E,EAAsF,KAAtF,EAA6F,IAA7F,EAAmG,KAAnG,EAA0G,IAA1G,EAAgH,KAAhH,EAAuH,KAAvH;AAA5B,CAFU,EAGV;EAAED,IAAI,EAAE,OAAR;EAAiBC,SAAS,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,MAAxB,EAAgC,KAAhC,EAAuC,MAAvC,EAA+C,OAA/C,EAAwD,KAAxD,EAA+D,KAA/D,EAAsE,KAAtE,EAA6E,MAA7E,EAAqF,KAArF,EAA4F,KAA5F,EAAmG,KAAnG,EAA0G,KAA1G,EAAiH,MAAjH,EAAyH,KAAzH;AAA5B,CAHU,EAIV;EAAED,IAAI,EAAE,UAAR;EAAoBC,SAAS,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,EAA8B,KAA9B,EAAqC,MAArC,EAA6C,KAA7C,EAAoD,KAApD,EAA2D,KAA3D,EAAkE,KAAlE,EAAyE,KAAzE,EAAgF,MAAhF,EAAwF,MAAxF,EAAgG,MAAhG,EAAwG,GAAxG,EAA6G,OAA7G,EAAsH,KAAtH,EAA6H,IAA7H,EAAmI,KAAnI,EAA0I,MAA1I,EAAkJ,KAAlJ,EAAyJ,IAAzJ,EAA+J,KAA/J,EAAsK,IAAtK,EAA4K,KAA5K,EAAmL,KAAnL,EAA0L,KAA1L;AAA/B,CAJU,CAAd;;AAOA,SAASC,mBAAT,GAA+B;EAAA;;EAC3B,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;EACAO,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,cAA9B;;EAEA,MAAMI,YAAY,GAAG,MAAOC,KAAP,IAAiB;IAClCA,KAAK,CAACC,cAAN;IACA,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWJ,KAAK,CAACK,MAAN,CAAaH,KAAxB,CAAd;;IACA,IAAI;MACA,MAAMI,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI,IAAIH,OAAJ,CAAY,CAACI,OAAD,EAAUC,MAAV,KAAqB;QACnF,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;QACAD,MAAM,CAACE,MAAP,GAAgB,MAAMJ,OAAO,CAAC;UAAEK,UAAU,EAAEH,MAAM,CAACI,MAArB;UAA6BP;QAA7B,CAAD,CAA7B;;QACAG,MAAM,CAACK,OAAP,GAAiBN,MAAjB;QACAC,MAAM,CAACM,aAAP,CAAqBT,IAArB;MACH,CALqD,CAAlB,CAAZ,CAAxB;MAMAd,iBAAiB,CAACU,SAAD,CAAjB;IACH,CARD,CAQE,OAAOc,KAAP,EAAc;MACZvB,OAAO,CAACuB,KAAR,CAAc,QAAd,EAAwBA,KAAxB;IACH;EACJ,CAdD;;EAgBA,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,MAA3B;MAA4B,QAAQ,EAAErB;IAAtC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UACCsB,KAAK,CAACC,kBAAN,CAAyBb,GAAzB,CAA6B,CAACc,IAAD,EAAOC,KAAP,KAAiB;QACnB,MAAMC,QAAQ,GAAGF,IAAjB;QACA,MAAMG,aAAa,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgBC,GAAhB,GAAsBC,WAAtB,EAAtB;QACA,MAAMC,QAAQ,GAAGvC,KAAK,CAACwC,IAAN,CAAWvC,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeuC,QAAf,CAAwBN,aAAxB,CAAnB,CAAjB;QACA,oBACI,QAAC,GAAD;UAAK,EAAE,EAAE,CAAT;UAAA,WACKI,QAAQ,GACLA,QAAQ,CAACtC,IAAT,KAAkB,OAAlB,gBACI;YAAA,uBACI;cACI,GAAG,EAAEiC,QADT;cAEI,GAAG,EAAC,SAFR;cAGI,KAAK,EAAEQ;YAHX;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,GAQIH,QAAQ,CAACtC,IAAT,KAAkB,OAAlB,gBACA;YACI,GAAG,EAAEiC,QADT;YAEI,QAAQ,EAAE,IAFd;YAGI,QAAQ,EAAE,KAHd;YAII,GAAG,EAAC,SAJR;YAKI,KAAK,EAAEQ;UALX;YAAA;YAAA;YAAA;UAAA,QADA,GAQAH,QAAQ,CAACtC,IAAT,KAAkB,UAAlB,gBACA;YAAA,uBACI;cAAK,GAAG,EAAE0C,SAAV;cACI,GAAG,EAAC,SADR;cAEI,KAAK,EAAED;YAFX;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADA,GAOAH,QAAQ,CAACtC,IAAT,KAAkB,OAAlB,gBACA;YAAA,uBACI;cAAK,GAAG,EAAE0C,SAAV;cACI,GAAG,EAAC,SADR;cAEI,KAAK,EAAED;YAFX;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADA,GAOA,IA/BC,gBAiCL;YAAK,SAAS,EAAC,cAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAlCR,eAoCI;YAAM,KAAK,EAAE;cAAEE,MAAM,EAAE;YAAV,CAAb;YAAA,uBAAoC;cAAK,SAAS,EAAC,IAAf;cAAoB,OAAO,EAAGC,CAAD,IAAOC,eAAe,CAACD,CAAD,EAAIZ,KAAJ,CAAnD;cAAA,wBAAgE,QAAC,UAAD;gBAAY,SAAS,EAAC;cAAtB;gBAAA;gBAAA;gBAAA;cAAA,QAAhE;YAAA;cAAA;cAAA;cAAA;YAAA;UAApC;YAAA;YAAA;YAAA;UAAA,QApCJ;QAAA,GAAiBA,KAAjB;UAAA;UAAA;UAAA;QAAA,QADJ;MAwCH,CA5CxB;IADD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAoDH;;GAxEQ9B,mB;;KAAAA,mB;AA0ET,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}