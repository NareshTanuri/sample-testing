{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\Pages\\\\Example1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst allCities = [{\n  id: 1,\n  name: \"India\",\n  cities: [\"Hyderabad\", \"Mumbai\"]\n}, {\n  id: 2,\n  name: \"USA\",\n  cities: [\"New York\", \"Los Angeles\"]\n}, {\n  id: 3,\n  name: \"USSA\",\n  cities: [\"New City\", \"Los Angeles\"]\n}];\n\nconst Example1 = () => {\n  _s();\n\n  const [state, setState] = useState({\n    cities: allCities,\n    selectCityName: \"0\",\n    cityName: \"0\",\n    selectCity: []\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"SelectName\") {\n      if (value !== \"0\") {\n        const findValueCity = state.cities.find(element => element.id === parseInt(value));\n\n        if (findValueCity) {\n          setState(prevState => ({ ...prevState,\n            selectCity: findValueCity.cities,\n            selectCityName: value\n          }));\n        }\n      } else {\n        setState(prevState => ({ ...prevState,\n          selectCity: [],\n          selectCityName: value\n        }));\n      }\n    } else if (name === \"CityName\") {\n      setState(prevState => ({ ...prevState,\n        cityName: value\n      }));\n    }\n  };\n\n  const {\n    cities,\n    selectCity,\n    selectCityName,\n    cityName\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          size: \"sm\",\n          onChange: handleChange,\n          value: selectCityName,\n          name: \"SelectName\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"--Select Country--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), cities.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          size: \"sm\",\n          onChange: handleChange,\n          value: cityName,\n          name: \"CityName\",\n          disabled: selectCity.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"--Select City--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), selectCity.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Example1, \"ENLarOU2rklEB9y+tfVos9zZoSg=\");\n\n_c = Example1;\nexport default Example1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example1\");","map":{"version":3,"names":["React","useState","Row","Col","Form","allCities","id","name","cities","Example1","state","setState","selectCityName","cityName","selectCity","handleChange","e","value","target","findValueCity","find","element","parseInt","prevState","map","item","length","city","index"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/Pages/Example1.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Form } from \"react-bootstrap\";\r\n\r\nconst allCities = [\r\n    { id: 1, name: \"India\", cities: [\"Hyderabad\", \"Mumbai\"] },\r\n    { id: 2, name: \"USA\", cities: [\"New York\", \"Los Angeles\"] },\r\n    { id: 3, name: \"USSA\", cities: [\"New City\", \"Los Angeles\"] },\r\n];\r\n\r\nconst Example1 = () => {\r\n    const [state, setState] = useState({\r\n        cities: allCities,\r\n        selectCityName: \"0\",\r\n        cityName: \"0\",\r\n        selectCity: [],\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === \"SelectName\") {\r\n            if (value !== \"0\") {\r\n                const findValueCity = state.cities.find((element) => element.id === parseInt(value));\r\n                if (findValueCity) {\r\n                    setState((prevState) => ({ ...prevState, selectCity: findValueCity.cities, selectCityName: value }));\r\n                }\r\n            } else {\r\n                setState((prevState) => ({ ...prevState, selectCity: [], selectCityName: value }));\r\n            }\r\n        } else if (name === \"CityName\") {\r\n            setState((prevState) => ({ ...prevState, cityName: value }));\r\n        }\r\n    };\r\n\r\n    const { cities, selectCity, selectCityName, cityName } = state;\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mt-3\">\r\n                <Col sm={6}>\r\n                    <Form.Select size=\"sm\" onChange={handleChange} value={selectCityName} name=\"SelectName\">\r\n                        <option value=\"0\">--Select Country--</option>\r\n                        {cities.map((item) => (\r\n                            <option value={item.id} key={item.id}>{item.name}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                </Col>\r\n                <Col sm={6}>\r\n                    <Form.Select size=\"sm\" onChange={handleChange} value={cityName} name=\"CityName\" disabled={selectCity.length === 0}>\r\n                        <option value=\"0\">--Select City--</option>\r\n                        {selectCity.map((city, index) => (\r\n                            <option value={city} key={index}>{city}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Example1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}