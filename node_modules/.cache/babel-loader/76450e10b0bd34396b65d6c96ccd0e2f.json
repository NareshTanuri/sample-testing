{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\example.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contacts = [{\n  id: 1,\n  name: \"John Doe\",\n  mobileNumber: \"1234567890\",\n  email: \"john@example.com\",\n  gender: \"male\"\n}, {\n  id: 2,\n  name: \"Jane Smith\",\n  mobileNumber: \"0987654321\",\n  email: \"jane@example.com\",\n  gender: \"female\"\n}, {\n  id: 3,\n  name: \"Michael Johnson\",\n  mobileNumber: \"3456789012\",\n  email: \"michael@example.com\",\n  gender: \"male\"\n}, {\n  id: 4,\n  name: \"Emily Davis\",\n  mobileNumber: \"5678901234\",\n  email: \"emily@example.com\",\n  gender: \"female\"\n}, {\n  id: 5,\n  name: \"David Brown\",\n  mobileNumber: \"7890123456\",\n  email: \"david@example.com\",\n  gender: \"male\"\n}];\n\nconst Example = () => {\n  _s();\n\n  const [state, setState] = useState({\n    columns: ['Sno', 'Name', 'Mobile Number', 'Email', 'Gender'],\n    rowData: []\n  });\n  console.log(\"state\", state);\n  useEffect(() => {\n    setState(prevState => ({ ...prevState,\n      rowData: contacts\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: state.columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: state.rowData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), state.columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [column === 'Name' && row.name, column === 'Mobile Number' && row.mobileNumber, column === 'Email' && row.email, column === 'Gender' && row.gender]\n          }, columnIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this))]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Example, \"WzW2/Pi57daKtpJPnVq+t1hqCb4=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useEffect","useState","contacts","id","name","mobileNumber","email","gender","Example","state","setState","columns","rowData","console","log","prevState","map","column","index","row","columnIndex"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/example.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst contacts = [\r\n    {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        mobileNumber: \"1234567890\",\r\n        email: \"john@example.com\",\r\n        gender: \"male\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Jane Smith\",\r\n        mobileNumber: \"0987654321\",\r\n        email: \"jane@example.com\",\r\n        gender: \"female\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Michael Johnson\",\r\n        mobileNumber: \"3456789012\",\r\n        email: \"michael@example.com\",\r\n        gender: \"male\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Emily Davis\",\r\n        mobileNumber: \"5678901234\",\r\n        email: \"emily@example.com\",\r\n        gender: \"female\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"David Brown\",\r\n        mobileNumber: \"7890123456\",\r\n        email: \"david@example.com\",\r\n        gender: \"male\"\r\n    }\r\n];\r\n\r\nconst Example = () => {\r\n\r\n    const [state, setState] = useState({\r\n        columns: ['Sno', 'Name', 'Mobile Number', 'Email', 'Gender'],\r\n        rowData: []\r\n    });\r\n   console.log(\"state\",state);\r\n    useEffect(() => {\r\n        setState(prevState => ({ ...prevState, rowData: contacts }))\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        {state.columns.map((column, index) => (\r\n                            <th key={index} scope=\"col\">{column}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {state.rowData.map((row, index) => (\r\n                        <tr key={row.id}>\r\n                            <td>{index + 1}</td>\r\n                            {state.columns.map((column, columnIndex) => (\r\n                                <td key={columnIndex}>\r\n                                    {column === 'Name' && row.name}\r\n                                    {column === 'Mobile Number' && row.mobileNumber}\r\n                                    {column === 'Email' && row.email}\r\n                                    {column === 'Gender' && row.gender}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Example;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAG,CACb;EACIC,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,UAFV;EAGIC,YAAY,EAAE,YAHlB;EAIIC,KAAK,EAAE,kBAJX;EAKIC,MAAM,EAAE;AALZ,CADa,EAQb;EACIJ,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,YAFV;EAGIC,YAAY,EAAE,YAHlB;EAIIC,KAAK,EAAE,kBAJX;EAKIC,MAAM,EAAE;AALZ,CARa,EAeb;EACIJ,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,iBAFV;EAGIC,YAAY,EAAE,YAHlB;EAIIC,KAAK,EAAE,qBAJX;EAKIC,MAAM,EAAE;AALZ,CAfa,EAsBb;EACIJ,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,aAFV;EAGIC,YAAY,EAAE,YAHlB;EAIIC,KAAK,EAAE,mBAJX;EAKIC,MAAM,EAAE;AALZ,CAtBa,EA6Bb;EACIJ,EAAE,EAAE,CADR;EAEIC,IAAI,EAAE,aAFV;EAGIC,YAAY,EAAE,YAHlB;EAIIC,KAAK,EAAE,mBAJX;EAKIC,MAAM,EAAE;AALZ,CA7Ba,CAAjB;;AAsCA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;IAC/BU,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,eAAhB,EAAiC,OAAjC,EAA0C,QAA1C,CADsB;IAE/BC,OAAO,EAAE;EAFsB,CAAD,CAAlC;EAIDC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,KAApB;EACCT,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACK,SAAS,KAAK,EAAE,GAAGA,SAAL;MAAgBH,OAAO,EAAEV;IAAzB,CAAL,CAAV,CAAR;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,uBACI;MAAO,SAAS,EAAC,OAAjB;MAAA,wBACI;QAAA,uBACI;UAAA,UACKO,KAAK,CAACE,OAAN,CAAcK,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,kBACf;YAAgB,KAAK,EAAC,KAAtB;YAAA,UAA6BD;UAA7B,GAASC,KAAT;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QAAA,UACKT,KAAK,CAACG,OAAN,CAAcI,GAAd,CAAkB,CAACG,GAAD,EAAMD,KAAN,kBACf;UAAA,wBACI;YAAA,UAAKA,KAAK,GAAG;UAAb;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKT,KAAK,CAACE,OAAN,CAAcK,GAAd,CAAkB,CAACC,MAAD,EAASG,WAAT,kBACf;YAAA,WACKH,MAAM,KAAK,MAAX,IAAqBE,GAAG,CAACf,IAD9B,EAEKa,MAAM,KAAK,eAAX,IAA8BE,GAAG,CAACd,YAFvC,EAGKY,MAAM,KAAK,OAAX,IAAsBE,GAAG,CAACb,KAH/B,EAIKW,MAAM,KAAK,QAAX,IAAuBE,GAAG,CAACZ,MAJhC;UAAA,GAASa,WAAT;YAAA;YAAA;YAAA;UAAA,QADH,CAFL;QAAA,GAASD,GAAG,CAAChB,EAAb;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA4BH,CAvCD;;GAAMK,O;;KAAAA,O;AAyCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}