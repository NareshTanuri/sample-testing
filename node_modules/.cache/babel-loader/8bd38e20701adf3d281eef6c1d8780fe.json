{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\example.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Example = () => {\n  _s();\n\n  const contacts = [{\n    name: \"John Doe\",\n    mobile: \"1234567890\",\n    email: \"john@example.com\",\n    gender: \"male\"\n  }, {\n    name: \"Jane Smith\",\n    mobile: \"0987654321\",\n    email: \"jane@example.com\",\n    gender: \"female\"\n  }, {\n    name: \"Michael Johnson\",\n    mobile: \"3456789012\",\n    email: \"michael@example.com\",\n    gender: \"male\"\n  }, {\n    name: \"Emily Davis\",\n    mobile: \"5678901234\",\n    email: \"emily@example.com\",\n    gender: \"female\"\n  }, {\n    name: \"David Brown\",\n    mobile: \"7890123456\",\n    email: \"david@example.com\",\n    gender: \"male\"\n  }];\n  const [state, setState] = useState({\n    columns: ['sno', 'Name', 'Mobile Number', 'Email', 'Gender'],\n    rowData: []\n  });\n  console.log(\"statestate\", state);\n  useEffect(() => {\n    setState(prevState => ({ ...prevState,\n      rowData: contacts\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: state.columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Example, \"PO4CESVqEGAabF+BT+FqWL62LBQ=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useEffect","useState","Example","contacts","name","mobile","email","gender","state","setState","columns","rowData","console","log","prevState","map","column","index"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/example.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Example = () => {\r\n    const contacts = [\r\n        {\r\n            name: \"John Doe\",\r\n            mobile: \"1234567890\",\r\n            email: \"john@example.com\",\r\n            gender: \"male\"\r\n        },\r\n        {\r\n            name: \"Jane Smith\",\r\n            mobile: \"0987654321\",\r\n            email: \"jane@example.com\",\r\n            gender: \"female\"\r\n        },\r\n        {\r\n            name: \"Michael Johnson\",\r\n            mobile: \"3456789012\",\r\n            email: \"michael@example.com\",\r\n            gender: \"male\"\r\n        },\r\n        {\r\n            name: \"Emily Davis\",\r\n            mobile: \"5678901234\",\r\n            email: \"emily@example.com\",\r\n            gender: \"female\"\r\n        },\r\n        {\r\n            name: \"David Brown\",\r\n            mobile: \"7890123456\",\r\n            email: \"david@example.com\",\r\n            gender: \"male\"\r\n        }\r\n    ];\r\n\r\n    const [state, setState] = useState({\r\n        columns: ['sno', 'Name', 'Mobile Number', 'Email', 'Gender'],\r\n        rowData: []\r\n    });\r\n    console.log(\"statestate\", state);\r\n\r\n    useEffect(() => {\r\n        setState(prevState => ({ ...prevState, rowData: contacts }))\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        {state.columns.map((column, index) => (\r\n                            <th key={index} scope=\"col\">{column}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Example;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAMC,QAAQ,GAAG,CACb;IACIC,IAAI,EAAE,UADV;IAEIC,MAAM,EAAE,YAFZ;IAGIC,KAAK,EAAE,kBAHX;IAIIC,MAAM,EAAE;EAJZ,CADa,EAOb;IACIH,IAAI,EAAE,YADV;IAEIC,MAAM,EAAE,YAFZ;IAGIC,KAAK,EAAE,kBAHX;IAIIC,MAAM,EAAE;EAJZ,CAPa,EAab;IACIH,IAAI,EAAE,iBADV;IAEIC,MAAM,EAAE,YAFZ;IAGIC,KAAK,EAAE,qBAHX;IAIIC,MAAM,EAAE;EAJZ,CAba,EAmBb;IACIH,IAAI,EAAE,aADV;IAEIC,MAAM,EAAE,YAFZ;IAGIC,KAAK,EAAE,mBAHX;IAIIC,MAAM,EAAE;EAJZ,CAnBa,EAyBb;IACIH,IAAI,EAAE,aADV;IAEIC,MAAM,EAAE,YAFZ;IAGIC,KAAK,EAAE,mBAHX;IAIIC,MAAM,EAAE;EAJZ,CAzBa,CAAjB;EAiCA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;IAC/BS,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,eAAhB,EAAiC,OAAjC,EAA0C,QAA1C,CADsB;IAE/BC,OAAO,EAAE;EAFsB,CAAD,CAAlC;EAIAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,KAA1B;EAEAR,SAAS,CAAC,MAAM;IACZS,QAAQ,CAACK,SAAS,KAAK,EAAE,GAAGA,SAAL;MAAgBH,OAAO,EAAER;IAAzB,CAAL,CAAV,CAAR;EACH,CAFQ,EAEN,EAFM,CAAT;EAKA,oBACI;IAAA,uBACI;MAAO,KAAK,EAAC,OAAb;MAAA,uBACI;QAAA,uBACI;UAAA,UACKK,KAAK,CAACE,OAAN,CAAcK,GAAd,CAAkB,CAACC,MAAD,EAASC,KAAT,kBACf;YAAgB,KAAK,EAAC,KAAtB;YAAA,UAA6BD;UAA7B,GAASC,KAAT;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAaH,CA1DD;;GAAMf,O;;KAAAA,O;AA2DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}