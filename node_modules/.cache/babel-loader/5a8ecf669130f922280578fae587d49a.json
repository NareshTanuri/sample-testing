{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\Pages\\\\Example1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Form, ListGroupItem } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst allCities = [{\n  id: 1,\n  name: \"India\",\n  cities: [\"Hydrabad\", \"Mumbai\"]\n}, {\n  id: 2,\n  name: \"USA\",\n  cities: [\"New York\", \"Los Angeles\"]\n}, {\n  id: 3,\n  name: \"USSA\",\n  cities: [\"New City\", \"Los Angeles\"]\n}];\n\nconst Example1 = () => {\n  _s();\n\n  const [state, setState] = useState({\n    cities: allCities,\n    selectCityName: \"0\",\n    cityName: \"0\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name == \"SelectName\") {\n      if (value != \"0\") {\n        const findValueCity = state.cities.find(item => item.parseInt(value));\n        debugger;\n      } else {\n        setState(prevState => ({ ...prevState,\n          selectCityName: value\n        }));\n      }\n    } else if (name == \"\") {\n      setState(prevState => ({ ...prevState,\n        cityName: value\n      }));\n    }\n  };\n\n  const {\n    cities\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          size: \"sm\",\n          onChange: handleChange,\n          value: state.selectCityName,\n          name: \"SelectName\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"--Select Name--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), cities.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"--Select City--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Example1, \"vICZ8uLeSj5STvq12Xh5GZA/az4=\");\n\n_c = Example1;\nexport default Example1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example1\");","map":{"version":3,"names":["React","useState","Row","Col","Form","ListGroupItem","allCities","id","name","cities","Example1","state","setState","selectCityName","cityName","handleChange","e","value","target","findValueCity","find","item","parseInt","prevState","map"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/Pages/Example1.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Form, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst allCities = [\r\n    { id: 1, name: \"India\", cities: [\"Hydrabad\", \"Mumbai\"] },\r\n    { id: 2, name: \"USA\", cities: [\"New York\", \"Los Angeles\"] },\r\n    { id: 3, name: \"USSA\", cities: [\"New City\", \"Los Angeles\"] },\r\n];\r\n\r\n\r\nconst Example1 = () => {\r\n    const [state, setState] = useState({\r\n        cities: allCities,\r\n        selectCityName: \"0\",\r\n        cityName: \"0\",\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name == \"SelectName\") {\r\n            if(value!= \"0\"){\r\n                const findValueCity = state.cities.find((item)=> item.parseInt(value));\r\n                debugger;\r\n                \r\n            }else{\r\n                setState(prevState => ({ ...prevState, selectCityName: value }))\r\n            }\r\n        } else if (name == \"\") {\r\n            setState(prevState => ({ ...prevState, cityName: value }))\r\n        }\r\n    };\r\n\r\n    const { cities } = state;\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mt-3\">\r\n                <Col sm={6}>\r\n                    <Form.Select size=\"sm\" onChange={handleChange} value={state.selectCityName} name=\"SelectName\">\r\n                        <option value=\"0\">--Select Name--</option>\r\n                        { cities.map((item) => (\r\n                                <option value={item.id} key={item.id}>{item.name}</option>\r\n                        ))}\r\n\r\n                      \r\n                    </Form.Select>\r\n                </Col>\r\n                <Col sm={6}>\r\n                    <Form.Select size=\"sm\">\r\n                        <option>--Select City--</option>\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default Example1;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,aAAzB,QAA8C,iBAA9C;;;AAEA,MAAMC,SAAS,GAAG,CACd;EAAEC,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,OAAf;EAAwBC,MAAM,EAAE,CAAC,UAAD,EAAa,QAAb;AAAhC,CADc,EAEd;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,KAAf;EAAsBC,MAAM,EAAE,CAAC,UAAD,EAAa,aAAb;AAA9B,CAFc,EAGd;EAAEF,EAAE,EAAE,CAAN;EAASC,IAAI,EAAE,MAAf;EAAuBC,MAAM,EAAE,CAAC,UAAD,EAAa,aAAb;AAA/B,CAHc,CAAlB;;AAOA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;IAC/BQ,MAAM,EAAEH,SADuB;IAE/BO,cAAc,EAAE,GAFe;IAG/BC,QAAQ,EAAE;EAHqB,CAAD,CAAlC;;EAMA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxB,MAAM;MAAER,IAAF;MAAQS;IAAR,IAAkBD,CAAC,CAACE,MAA1B;;IACA,IAAIV,IAAI,IAAI,YAAZ,EAA0B;MACtB,IAAGS,KAAK,IAAG,GAAX,EAAe;QACX,MAAME,aAAa,GAAGR,KAAK,CAACF,MAAN,CAAaW,IAAb,CAAmBC,IAAD,IAASA,IAAI,CAACC,QAAL,CAAcL,KAAd,CAA3B,CAAtB;QACA;MAEH,CAJD,MAIK;QACDL,QAAQ,CAACW,SAAS,KAAK,EAAE,GAAGA,SAAL;UAAgBV,cAAc,EAAEI;QAAhC,CAAL,CAAV,CAAR;MACH;IACJ,CARD,MAQO,IAAIT,IAAI,IAAI,EAAZ,EAAgB;MACnBI,QAAQ,CAACW,SAAS,KAAK,EAAE,GAAGA,SAAL;QAAgBT,QAAQ,EAAEG;MAA1B,CAAL,CAAV,CAAR;IACH;EACJ,CAbD;;EAeA,MAAM;IAAER;EAAF,IAAaE,KAAnB;EAEA,oBACI;IAAA,uBACI,QAAC,GAAD;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACI,QAAC,IAAD,CAAM,MAAN;UAAa,IAAI,EAAC,IAAlB;UAAuB,QAAQ,EAAEI,YAAjC;UAA+C,KAAK,EAAEJ,KAAK,CAACE,cAA5D;UAA4E,IAAI,EAAC,YAAjF;UAAA,wBACI;YAAQ,KAAK,EAAC,GAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,EAEMJ,MAAM,CAACe,GAAP,CAAYH,IAAD,iBACL;YAAQ,KAAK,EAAEA,IAAI,CAACd,EAApB;YAAA,UAAuCc,IAAI,CAACb;UAA5C,GAA6Ba,IAAI,CAACd,EAAlC;YAAA;YAAA;YAAA;UAAA,QADN,CAFN;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACI,QAAC,IAAD,CAAM,MAAN;UAAa,IAAI,EAAC,IAAlB;UAAA,uBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAqBH,CA7CD;;GAAMG,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}