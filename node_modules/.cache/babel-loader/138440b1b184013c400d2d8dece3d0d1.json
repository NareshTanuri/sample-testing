{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESH THANURI\\\\OneDrive\\\\Desktop\\\\Reactjs\\\\src\\\\ApiExample\\\\Example4.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Example4 = () => {\n  _s();\n\n  const [state, setState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    selectionOption: \"0\",\n    multiSelectionOption: [],\n    multiSelectionOption1: [],\n    multiSelectionOption2: []\n  });\n  const data = [{\n    id: 1,\n    name: \"Naresh\"\n  }, {\n    id: 2,\n    name: \"Suresh\"\n  }];\n  const multiSelectionData = [{\n    id: 1,\n    name: \"NareshKumar\"\n  }, {\n    id: 2,\n    name: \"SureshKumar\"\n  }];\n  const multiSelectionData1 = [{\n    id: 1,\n    name: \"NareshKumar\",\n    age: 20\n  }, {\n    id: 2,\n    name: \"SureshKumar\",\n    age: 21\n  }];\n  const multiSelectionData2 = [{\n    id: 1,\n    name: \"NareshKumar\",\n    lastName: \"Tanuri\"\n  }, {\n    id: 2,\n    name: \"SureshKumar\",\n    lastName: \"Tanuri\"\n  }];\n  const formFields = [{\n    type: \"text\",\n    name: \"firstName\",\n    placeholder: \"First Name\",\n    label: \"First Name\"\n  }, {\n    type: \"select\",\n    name: \"selectionOption\",\n    placeholder: \"\",\n    label: \"Select Option\",\n    options: data\n  }, {\n    type: \"multi-select\",\n    name: \"multiSelectionOption\",\n    placeholder: \"\",\n    label: \"Multi Select Option\",\n    options: multiSelectionData\n  }, {\n    type: \"multi-select\",\n    name: \"multiSelectionOption1\",\n    placeholder: \"\",\n    label: \"Multi Select Option1\",\n    options: multiSelectionData1\n  }, {\n    type: \"multi-select\",\n    name: \"multiSelectionOption2\",\n    placeholder: \"\",\n    label: \"Multi Select Option2\",\n    options: multiSelectionData2\n  }, {\n    type: \"text\",\n    name: \"lastName\",\n    placeholder: \"Last Name\",\n    label: \"Last Name\"\n  }];\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleMultiSelectChange = (selectedOptions, name) => {\n    setState(prevState => ({ ...prevState,\n      [name]: selectedOptions\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: formFields.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), item.type === \"text\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: item.type,\n            placeholder: item.placeholder,\n            name: item.name,\n            value: state[item.name],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this) : item.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n            name: item.name,\n            value: state[item.name],\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"--Select Name--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), item.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.id,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this) : item.type === \"multi-select\" ? /*#__PURE__*/_jsxDEV(MultiSelect, {\n            options: item.options.map(option => ({\n              value: option.id,\n              label: item.name === \"multiSelectionOption1\" ? `${option.name} (${option.age})` : item.name === \"multiSelectionOption2\" ? `${option.name} (${option.lastName})` : option.name\n            })),\n            value: state[item.name],\n            onChange: selectedOptions => handleMultiSelectChange(selectedOptions, item.name),\n            labelledBy: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this) : null]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Example4, \"TK8xcT4wMLKnSIUQF0K6BVqMuLg=\");\n\n_c = Example4;\nexport default Example4;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example4\");","map":{"version":3,"names":["React","useState","Row","Col","MultiSelect","Example4","state","setState","firstName","lastName","selectionOption","multiSelectionOption","multiSelectionOption1","multiSelectionOption2","data","id","name","multiSelectionData","multiSelectionData1","age","multiSelectionData2","formFields","type","placeholder","label","options","handleChange","e","value","target","prevState","handleMultiSelectChange","selectedOptions","map","item","index","option"],"sources":["C:/Users/NARESH THANURI/OneDrive/Desktop/Reactjs/src/ApiExample/Example4.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\n\r\nconst Example4 = () => {\r\n    const [state, setState] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        selectionOption: \"0\",\r\n        multiSelectionOption: [],\r\n        multiSelectionOption1: [],\r\n        multiSelectionOption2: [],\r\n    });\r\n\r\n    const data = [{ id: 1, name: \"Naresh\" }, { id: 2, name: \"Suresh\" }];\r\n    const multiSelectionData = [{ id: 1, name: \"NareshKumar\" }, { id: 2, name: \"SureshKumar\" }];\r\n    const multiSelectionData1 = [{ id: 1, name: \"NareshKumar\", age: 20 }, { id: 2, name: \"SureshKumar\", age: 21 }];\r\n    const multiSelectionData2 = [{ id: 1, name: \"NareshKumar\",lastName:\"Tanuri\"}, { id: 2, name: \"SureshKumar\",lastName:\"Tanuri\" }];\r\n\r\n    const formFields = [\r\n        { type: \"text\", name: \"firstName\", placeholder: \"First Name\", label: \"First Name\" },\r\n        { type: \"select\", name: \"selectionOption\", placeholder: \"\", label: \"Select Option\", options: data },\r\n        { type: \"multi-select\", name: \"multiSelectionOption\", placeholder: \"\", label: \"Multi Select Option\", options: multiSelectionData },\r\n        { type: \"multi-select\", name: \"multiSelectionOption1\", placeholder: \"\", label: \"Multi Select Option1\", options: multiSelectionData1 },\r\n        { type: \"multi-select\", name: \"multiSelectionOption2\", placeholder: \"\", label: \"Multi Select Option2\", options: multiSelectionData2 },\r\n        { type: \"text\", name: \"lastName\", placeholder: \"Last Name\", label: \"Last Name\" },\r\n    ];\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setState(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleMultiSelectChange = (selectedOptions, name) => {\r\n        setState(prevState => ({ ...prevState, [name]: selectedOptions }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col sm={6}>\r\n                    {formFields.map((item, index) => (\r\n                        <div key={index} className=\"mt-3\">\r\n                            <h6>{item.label}</h6>\r\n                            {item.type === \"text\" ? (\r\n                                <input\r\n                                    type={item.type}\r\n                                    placeholder={item.placeholder}\r\n                                    name={item.name}\r\n                                    value={state[item.name]}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : item.type === \"select\" ? (\r\n                                <select\r\n                                    name={item.name}\r\n                                    value={state[item.name]}\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    <option value=\"0\">--Select Name--</option>\r\n                                    {item.options.map(option => (\r\n                                        <option key={option.id} value={option.id}>\r\n                                            {option.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            ) : item.type === \"multi-select\" ? (\r\n                                <MultiSelect\r\n                                    options={item.options.map(option => ({\r\n                                        value: option.id,\r\n                                        label: item.name === \"multiSelectionOption1\"  ? `${option.name} (${option.age})` : item.name === \"multiSelectionOption2\" ? `${option.name} (${option.lastName})` : option.name \r\n                                    }))}\r\n                                    value={state[item.name]}\r\n                                    onChange={(selectedOptions) => handleMultiSelectChange(selectedOptions, item.name)}\r\n                                    labelledBy=\"Select\"\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\nexport default Example4;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}